{{ $externalUrl := .Values.global.externalHostAddress -}}
[
  {{- if .Values.minio.enabled }}
  {
    "slug": "minio",
    "name": "Minio",
    "description": "S3-compatible datalake",
    "port": "",
    {{- if (index .Values "minio" "consoleIngress" "enabled") }}
    {{- with (index .Values "minio" "consoleIngress" "hosts" 0) }}
    "link": "https://{{ . }}"
    {{- end }}
    {{- else }}
    "link": "http://{{ $externalUrl }}:{{ .Values.minio.consoleService.nodePort }}"
    {{- end }}
  },
{{- end }}
  {
    "slug": "coder",
    "name": "Coder",
    "description": "Workspace manager",
    "port": "",
    {{- if .Values.coder.coder.ingress.enable }}
    "link": "https://{{ .Values.coder.coder.ingress.host }}"
    {{- else }}
    "link": "http://{{ $externalUrl }}:{{ .Values.coder.coder.service.httpNodePort }}"
    {{- end }}
  },
  {
    "slug": "krm",
    "name": "Kubernetes Resource Manager",
    "description": "Manager for Kubernetes Resources",
    "port": "",
    {{- if (index .Values "kubernetes-resource-manager" "ingress" "enabled") }}
    {{- with (index .Values "kubernetes-resource-manager" "ingress" "hosts" 0) }}
    "link": "https://{{ .host }}"
    {{- end }}
    {{- else }}
    "link": "http://{{ $externalUrl }}:{{ index .Values "kubernetes-resource-manager" "service" "nodePort"}}"
    {{- end }}
  },
{{- if (index .Values.dashboard "additional-components" "enabled") }}
{{- range (index .Values.dashboard "additional-components" "apps") }}
  {
    "slug": {{ .name | quote }},
    "name": {{ .name | title | quote }},
    "description": {{ .description | quote }},
    "port": "",
  {{- if .ingress.enabled }}
    {{- with (index . "ingress" "hosts" 0) }}
    "link": "https://{{ . }}"
    {{- end }}
  {{- else }}
    "link": "http://{{ .service.name }}:{{ .service.port }}"
  {{- end }}
  },
{{- end}}
{{- end }}
{{- if (index .Values "oauth2-proxy" "enabled") }}
{{- range (index .Values "oauth2-proxy" "apps") }}
  {
    "slug": {{ .name | quote }},
    "name": {{ .name | title | quote }},
    "description": {{ .description | quote }},
    "port": "",
  {{- if .ingress.enabled }}
    {{- with (index . "ingress" "hosts" 0) }}
    "link": "https://{{ . }}"
    {{- end }}
  {{- else }}
    {{- if eq .name "nuclio"}}
    "link": "http://{{ $externalUrl }}:{{ .Values.global.nuclio.dashboard.nodePort }}"
    {{- else if eq .name "mlrun" }}
    "link": "http://{{ $externalUrl }}:{{ index .Values "mlrun-ce" "mlrun" "ui" "service" "nodePort" }}"
    {{- else if eq .name "kubeflow" }}
    "link": "http://{{ $externalUrl }}:{{ index .Values "mlrun-ce" "pipelines" "ui" "service" "nodePort" }}"
    {{- else }}
    "link": "http://{{ .service.name }}:{{ .service.port }}"
    {{- end }}
  {{- end }}
  },
{{- end}}
{{- else }}
  {
    "slug": "nuclio",
    "name": "Nuclio",
    "description": "Serverless platform",
    "port": "",
    {{- if (index .Values "mlrun-ce" "nuclio" "dashboard" "ingress" "enabled") }}
    {{- with (index .Values "mlrun-ce" "nuclio" "dashboard" "ingress" "hosts" 0) }}
    "link": "https://{{ . }}"
    {{- end }}
    {{- else }}
    "link": "http://{{ $externalUrl }}:{{ .Values.global.nuclio.dashboard.nodePort }}"
    {{- end }}
  },
  {
    "slug": "mlrun",
    "name": "MLRun Dashboard",
    "description": "ML Run platform UI and API for the MLOps processes",
    "port": "",
    {{- if (index .Values "mlrun-ce" "mlrun" "ui" "ingress" "enabled") }}
    {{- with (index .Values "mlrun-ce" "mlrun" "ui" "ingress" "hosts" 0) }}
    "link": "https://{{ .host }}"
    {{- end }}
    {{- else }}
    {{- with (index .Subcharts "mlrun-ce") }}
    "link": "http://{{ $externalUrl }}:{{ .Values.mlrun.ui.service.nodePort }}"
    {{- end }}
    {{- end }}
  },
  {
    "slug": "kubeflow",
    "name": "Kubeflow Dashboard",
    "description": "Kubeflow Pipelines is a platform for building and deploying portable, scalable machine learning (ML) workflows",
    "port": "",
    {{- if (index .Values "mlrun-ce" "pipelines" "ui" "ingress" "enabled") }}
    {{- with (index .Values "mlrun-ce" "pipelines" "ui" "ingress" "hosts" 0) }}
    "link": "https://{{ .host }}"
    {{- end }}
    {{- else }}
    {{- with (index .Subcharts "mlrun-ce") }}
    "link": "http://{{ $externalUrl }}:{{ .Values.pipelines.ui.service.nodePort }}"
    {{- end }}
    {{- end }}
  },
{{- end }}
  {
    "slug": "dhcore",
    "name": "DH Core",
    "description": "Core Digital Hub",
    "port": "",
    {{- if .Values.core.ingress.enabled }}
    {{- with (index .Values.core.ingress.hosts 0) }}
    "link": "https://{{ .host }}"
    {{- end }}
    {{- else }}
    "link": "http://{{ $externalUrl }}:{{ .Values.core.service.httpNodePort }}"
    {{- end }}
  }
]
