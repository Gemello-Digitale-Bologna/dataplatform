apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "aac.fullname" . }}
  labels:
    {{- include "aac.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "aac.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "aac.labels" . | nindent 8 }}
	{{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "aac.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: [{{ .Values.image.aacCommand1 }}, {{ .Values.image.aacCommand2 }}, {{ .Values.image.aacCommand3 }}]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: MAIL_USER
              valueFrom:
                secretKeyRef:
                {{- if .Values.mailCreds.existingSecret }}
                  name: {{ .Values.mailCreds.existingSecret }}
                  key: {{ .Values.mailCreds.usernameKey }}
                {{- else }}
                  name: aac-mail-secret
                  key: jdbc-user
                {{- end }}
            - name: MAIL_PASS
              valueFrom:
                secretKeyRef:
                {{- if .Values.mailCreds.existingSecret }}
                  name: {{ .Values.mailCreds.existingSecret }}
                  key: {{ .Values.mailCreds.passwordKey }}
                {{- else }}
                  name: aac-mail-secret
                  key: jdbc-password
                {{- end }}
            - name: JDBC_USER
              valueFrom:
                secretKeyRef:
                {{- if .Values.jdbcExistingCreds.existingSecret }}
                  name: {{ .Values.jdbcExistingCreds.existingSecret }}
                  key: {{ .Values.jdbcExistingCreds.userKey }}
                {{- else }}
                {{- if .Values.postgresOperator.installed }}
                  name: {{ .Values.postgresOperator.adminUser }}.{{ .Values.postgresOperator.psqlClusterName }}.credentials.postgresql.acid.zalan.do
                  key: username
                {{- else }}
                  name: aac-h2-creds
                  key: user
                {{- end }}
                {{- end }}
            - name: JDBC_PASS
              valueFrom:
                secretKeyRef:
                {{- if .Values.jdbcExistingCreds.existingSecret }}
                  name: {{ .Values.jdbcExistingCreds.existingSecret }}
                  key: {{ .Values.jdbcExistingCreds.passwordKey }}
                {{- else }}
                {{- if .Values.postgresOperator.installed }}
                  name: {{ .Values.postgresOperator.adminUser }}.{{ .Values.postgresOperator.psqlClusterName }}.credentials.postgresql.acid.zalan.do
                  key: password
                {{- else }}
                  name: aac-h2-creds
                  key: password
                {{- end }}
                {{- end }}
            - name: ADMIN_USERNAME
              valueFrom:
                secretKeyRef:
                {{- if .Values.adminExistingCreds.existingSecret }}
                  name: {{ .Values.adminExistingCreds.existingSecret }}
                  key: {{ .Values.adminExistingCreds.userKey }}
                {{- else }}
                  name: aac-admin-secret
                  key: username
                {{- end }}
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                {{- if .Values.adminExistingCreds.existingSecret }}
                  name: {{ .Values.adminExistingCreds.existingSecret }}
                  key: {{ .Values.adminExistingCreds.passKey }}
                {{- else }}
                  name: aac-admin-secret
                  key: password
                {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          envFrom:
          - configMapRef:
              name: {{ include "aac.fullname" . }}
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
