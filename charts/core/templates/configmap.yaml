apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "core.fullname" . }}
data:
  DH_ENDPOINT: "{{ include "core.endpoint" . }}"
  K8S_NAMESPACE: {{ .Release.Namespace }}
  JDBC_PLATFORM: postgresql
  JDBC_URL: "jdbc:postgresql://core-postgres-cluster:5432/core"
  JDBC_DRIVER: org.postgresql.Driver
  JDBC_DIALECT: org.hibernate.dialect.PostgreSQLDialect
  DH_CONFIG_COMMON_SECRETS: digitalhub-common-creds
  DH_CONFIG_COMMON_MAPS: digitalhub-common-env
  LOG_LEVEL: INFO
  RUNTIME_NEFERTEM_IMAGE: {{ .Values.runtime.nefertem.image }}:{{ .Values.runtime.nefertem.tag }}
  RUNTIME_DBT_IMAGE: {{ .Values.runtime.dbt.image }}:{{ .Values.runtime.dbt.tag }}
  RUNTIME_KFP_IMAGE: {{ .Values.runtime.kfp.image }}:{{ .Values.runtime.kfp.tag }}
  RUNTIME_PYTHON_IMAGE_3_9: {{ .Values.runtime.python.image }}:{{ .Values.runtime.python.tag3_9 }}
  RUNTIME_PYTHON_IMAGE_3_10: {{ .Values.runtime.python.image }}:{{ .Values.runtime.python.tag3_10 }}
  RUNTIME_PYTHON_IMAGE_3_11: {{ .Values.runtime.python.image }}:{{ .Values.runtime.python.tag3_11 }}
  {{- if .Values.events.enabled }}
  ENABLE_EVENTS: {{ .Values.events.enabled | quote }} 
  {{- if .Values.events.rabbitmq.enabled }}
  RABBITMQ_ENABLE: {{ .Values.events.rabbitmq.enabled | quote }}
  RABBITMQ_HOST: {{ .Values.events.rabbitmq.host }}
  RABBITMQ_PORT: {{ .Values.events.rabbitmq.port | quote }}
  RABBITMQ_VHOST: {{ .Values.events.rabbitmq.vhost }}
  RABBITMQ_QUEUE: {{ .Values.events.rabbitmq.queue }}
  RABBITMQ_TOPIC: {{ .Values.events.rabbitmq.topic }}
  RABBITMQ_ROUTING_KEY: {{ .Values.events.rabbitmq.routingKey }}
{{- end }}
{{- end }}
{{- if .Values.solr.enabled }}
  ENABLE_SOLR: {{ .Values.solr.enabled | quote }}
  SOLR_URL: {{ .Values.solr.url }}
  SOLR_COLLECTION: {{ .Values.solr.collection.name }}
{{- end }}
{{- if .Values.authentication.basic.enabled }}
  DH_AUTH_BASIC_USER: {{ .Values.authentication.basic.username }}
  DH_AUTH_BASIC_PASSWORD: {{ .Values.authentication.basic.password }}
{{- end }}
{{- if .Values.authentication.openId.enabled }}
{{- if .Values.authentication.openId.jwtAudience }}
  DH_AUTH_JWT_ISSUER_URI: {{ .Values.authentication.openId.issuerUri }}
  DH_AUTH_JWT_AUDIENCE: {{ .Values.authentication.openId.jwtAudience }}
{{- end }}
  DH_AUTH_JWT_CLAIM: {{ .Values.authentication.openId.jwtClaim }}
  DH_AUTH_OIDC_ISSUER_URI: {{ .Values.authentication.openId.issuerUri }}
  DH_AUTH_OIDC_SCOPE: {{ .Values.authentication.openId.scope }}
{{- end }}
{{- if .Values.global.registry.url }}
  DOCKER_REGISTRY: {{ .Values.global.registry.url }}
{{- end }}
{{- if and .Values.global.registry.username .Values.global.registry.password .Values.global.registry.email }}
  KANIKO_IMAGE_PREFIX: {{ .Values.registry.kaniko.imagePrefix | default .Release.Namespace }}
  DOCKER_REGISTRY_SECRET: {{ .Values.global.registry.secretName }}
{{- end }}
  DH_CORS_ORIGINS: {{ .Values.corsOrigin | quote }}
